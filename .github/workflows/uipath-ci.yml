name: UiPath CI/CD (Pack → Deploy → Run)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  ci_cd:
    runs-on: windows-latest

    steps:
      # 1️⃣ Checkout the repo
      - name: Checkout
        uses: actions/checkout@v4

      # 2️⃣ Setup .NET 6
      - name: Setup .NET 6
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      # 3️⃣ Setup UiPath CLI (fixed stable version)
      - name: Setup UiPath CLI
        uses: Mikael-RnD/setup-uipath@v2
        with:
          version: 25.4.9364.27216   # stable version number
        id: uipathcli
        env:
          DOTNET_ROOT: C:\Program Files\dotnet

      # 4️⃣ Verify UiPath CLI
      - name: Verify UiPath CLI
        shell: pwsh
        run: |
          & "${{ steps.uipathcli.outputs.cli-path }}" --version
          & "${{ steps.uipathcli.outputs.cli-path }}" --help | Select-Object -First 20

      # 5️⃣ Pack UiPath project
      - name: Pack UiPath project
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path "$PWD\out" | Out-Null
          & "${{ steps.uipathcli.outputs.cli-path }}" package pack "$PWD" -o "$PWD\out" --autoVersion
          if ($LASTEXITCODE -ne 0) { throw "Pack failed." }
          dir "$PWD\out"

      # 6️⃣ Upload the NuGet package as an artifact
      - name: Upload UiPath Package (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: UiPathPackage
          path: out/*.nupkg

      # 7️⃣ Deploy to Orchestrator
      - name: Deploy to Orchestrator
        if: github.event_name == 'workflow_dispatch'
        shell: pwsh
        run: |
          $pkg = Get-ChildItem out -Filter *.nupkg | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if (-not $pkg) { throw "No .nupkg found in out/." }
          Write-Host "Deploying $($pkg.FullName)"
          & "${{ steps.uipathcli.outputs.cli-path }}" package deploy "$($pkg.FullName)" `
            "${{ secrets.UIP_ORCH_URL }}" `
            "${{ secrets.UIP_TENANT }}" `
            -A "${{ secrets.UIP_ACCOUNT_FOR_APP }}" `
            -I "${{ secrets.UIP_APP_ID }}" `
            -S "${{ secrets.UIP_APP_SECRET }}" `
            --applicationScope "${{ secrets.UIP_APP_SCOPE }}" `
            -o "${{ secrets.UIP_FOLDER }}" `
            --createProcess true `
            --processName "${{ secrets.UIP_PROCESS_NAME }}" `
            --entryPointsPath "${{ secrets.UIP_ENTRY_POINT }}"
          if ($LASTEXITCODE -ne 0) { throw "Deploy failed." }

      # 8️⃣ Run job (optional)
      - name: Run job
        if: github.event_name == 'workflow_dispatch'
        shell: pwsh
        run: |
          & "${{ steps.uipathcli.outputs.cli-path }}" job run `
            "${{ secrets.UIP_ORCH_URL }}" `
            "${{ secrets.UIP_TENANT }}" `
            -A "${{ secrets.UIP_ACCOUNT_FOR_APP }}" `
            -I "${{ secrets.UIP_APP_ID }}" `
            -S "${{ secrets.UIP_APP_SECRET }}" `
            --applicationScope "${{ secrets.UIP_APP_SCOPE }}" `
            -o "${{ secrets.UIP_FOLDER }}" `
            --processName "${{ secrets.UIP_PROCESS_NAME }}"
          if ($LASTEXITCODE -ne 0) { throw "Job run failed." }
