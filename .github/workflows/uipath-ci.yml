name: UiPath CI/CD (Pack → Deploy → Run)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  ci_cd:
    runs-on: windows-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Download stable UiPath CLI (portable)
      - name: Download UiPath CLI (stable)
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://github.com/UiPath/uipathcli/releases/download/v25.4.9364.27216/UiPath.CLI.Windows.25.4.9364.27216.zip" -OutFile "uipcli.zip"
          Expand-Archive uipcli.zip -DestinationPath uipcli
          echo "UIPCLI_PATH=$PWD/uipcli/tools/uipcli.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      # 3️⃣ Verify CLI
      - name: Verify UiPath CLI
        shell: pwsh
        run: |
          & "${env:UIPCLI_PATH}" --version
          & "${env:UIPCLI_PATH}" --help | Select-Object -First 20

      # 4️⃣ Pack UiPath project
      - name: Pack UiPath project
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path "$PWD/out" | Out-Null
          & "${env:UIPCLI_PATH}" package pack "$PWD" -o "$PWD/out" --autoVersion
          if ($LASTEXITCODE -ne 0) { throw "Pack failed." }
          dir "$PWD/out"

      # 5️⃣ Upload artifact
      - name: Upload UiPath Package (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: UiPathPackage
          path: out/*.nupkg

      # 6️⃣ Deploy to Orchestrator
      - name: Deploy to Orchestrator
        if: github.event_name == 'workflow_dispatch'
        shell: pwsh
        run: |
          $pkg = Get-ChildItem out -Filter *.nupkg | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if (-not $pkg) { throw "No .nupkg found in out/." }
          Write-Host "Deploying $($pkg.FullName)"
          & "${env:UIPCLI_PATH}" package deploy "$($pkg.FullName)" `
            "${{ secrets.UIP_ORCH_URL }}" `
            "${{ secrets.UIP_TENANT }}" `
            -A "${{ secrets.UIP_ACCOUNT_FOR_APP }}" `
            -I "${{ secrets.UIP_APP_ID }}" `
            -S "${{ secrets.UIP_APP_SECRET }}" `
            --applicationScope "${{ secrets.UIP_APP_SCOPE }}" `
            -o "${{ secrets.UIP_FOLDER }}" `
            --createProcess true `
            --processName "${{ secrets.UIP_PROCESS_NAME }}" `
            --entryPointsPath "${{ secrets.UIP_ENTRY_POINT }}"
          if ($LASTEXITCODE -ne 0) { throw "Deploy failed." }

      # 7️⃣ Run Orchestrator Job (optional)
      - name: Run job in Orchestrator
        if: github.event_name == 'workflow_dispatch'
        shell: pwsh
        run: |
          & "${env:UIPCLI_PATH}" job run `
            "${{ secrets.UIP_ORCH_URL }}" `
            "${{ secrets.UIP_TENANT }}" `
            -A "${{ secrets.UIP_ACCOUNT_FOR_APP }}" `
            -I "${{ secrets.UIP_APP_ID }}" `
            -S "${{ secrets.UIP_APP_SECRET }}" `
            --applicationScope "${{ secrets.UIP_APP_SCOPE }}" `
            -o "${{ secrets.UIP_FOLDER }}" `
            --processName "${{ secrets.UIP_PROCESS_NAME }}"
          if ($LASTEXITCODE -ne 0) { throw "Job run failed." }
