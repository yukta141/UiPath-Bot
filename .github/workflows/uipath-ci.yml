name: UiPath CI/CD (Pack → Deploy → Run)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  ci_cd:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 6
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      # ✅ Ensure UiPath.CLI is always installed/updated (stable across reruns)
      - name: Install/Update UiPath CLI
        shell: pwsh
        run: |
          dotnet tool update --global UiPath.CLI `
            --add-source https://www.myget.org/F/uipath-dev/api/v3/index.json
          echo "$env:USERPROFILE\.dotnet\tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          # Save path for later steps
          "UIPCLI_PATH=$env:USERPROFILE\.dotnet\tools\uipcli.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Verify UiPath CLI
        shell: pwsh
        run: |
          & "${env:UIPCLI_PATH}" --version
          & "${env:UIPCLI_PATH}" --help | Select-Object -First 20

      - name: Pack UiPath project
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path "$PWD\out" | Out-Null
          & "${env:UIPCLI_PATH}" package pack "$PWD" -o "$PWD\out" --autoVersion
          if ($LASTEXITCODE -ne 0) { throw "Pack failed." }
          dir "$PWD\out"

      - name: Upload UiPath Package (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: UiPathPackage
          path: out/*.nupkg

      - name: Deploy to Orchestrator
        if: github.event_name == 'workflow_dispatch'
        shell: pwsh
        run: |
          $pkg = Get-ChildItem out -Filter *.nupkg | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if (-not $pkg) { throw "No .nupkg found in out/." }
          Write-Host "Deploying $($pkg.FullName)"
          & "${env:UIPCLI_PATH}" package deploy "$($pkg.FullName)" `
            "${{ secrets.UIP_ORCH_URL }}" `
            "${{ secrets.UIP_TENANT }}" `
            -A "${{ secrets.UIP_ACCOUNT_FOR_APP }}" `
            -I "${{ secrets.UIP_APP_ID }}" `
            -S "${{ secrets.UIP_APP_SECRET }}" `
            --applicationScope "${{ secrets.UIP_APP_SCOPE }}" `
            -o "${{ secrets.UIP_FOLDER }}" `
            --createProcess true `
            --processName "${{ secrets.UIP_PROCESS_NAME }}" `
            --entryPointsPath "${{ secrets.UIP_ENTRY_POINT }}"
          if ($LASTEXITCODE -ne 0) { throw "Deploy failed." }

      - name: Run job (optional)
        if: github.event_name == 'workflow_dispatch'
        shell: pwsh
        run: |
          & "${env:UIPCLI_PATH}" job run `
            "${{ secrets.UIP_ORCH_URL }}" `
            "${{ secrets.UIP_TENANT }}" `
            -A "${{ secrets.UIP_ACCOUNT_FOR_APP }}" `
            -I "${{ secrets.UIP_APP_ID }}" `
            -S "${{ secrets.UIP_APP_SECRET }}" `
            --applicationScope "${{ secrets.UIP_APP_SCOPE }}" `
            -o "${{ secrets.UIP_FOLDER }}" `
            --processName "${{ secrets.UIP_PROCESS_NAME }}"
          if ($LASTEXITCODE -ne 0) { throw "Job run failed." }
